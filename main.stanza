; Generated by JITX 3.9.0
#use-added-syntax(jitx)
defpackage main :
  import core
  import jitx
  import jitx/commands
  import ocdb/utils/generic-components
  import helpers

  import jsl/bundles
  import jsl/protocols/usb
  import jsl/si/constraints
  import jsl/si/pairs
  import jsl/si/helpers
  import jsl/si/couplers

  ; import jsl/examples/protocols/common/example-board
  import jsl/examples/protocols/common/example-components 
  
; Define the shape/size of the board
val board_shape = RoundedRectangle(50.0, 50.0, 0.25)

; Module to run as a design
pcb-module my-design :
  ; define some pins/ports
  port gnd
  port power-5v
  port signal

  ; Create a 10k resistor component
  res-strap(power-5v, signal, 10.0e3)


  ; ; 1.8v reg 2a/3a/4a
  database-part(["mpn" => "TPS564201DDCR", "manufacturer" => "Texas Instruments"])
  ; ; 1.05v reg 2a/3a/4a
  database-part(["mpn" => "TPS564201DDCR", "manufacturer" => "Texas Instruments"])
  ; ; 3.3v reg 4a
  database-part(["mpn" => "TPS564201DDCR", "manufacturer" => "Texas Instruments"])
  ; ; 3.3v LDO
  database-part(["mpn" => "AZ1117R-3.3TRE1", "manufacturer" => "DIODES INCORPORATED"])

  ; power decoupling networks

  ; USB-C
  ; inst U1 : usb-src
  inst asm2464pdx : components/Asmedia/ASM2464PDX/module

  
  inst W25Q32JVSSIQ : database-part(["manufacturer" => "Winbond", "mpn" => "W25Q32JVSSIQ"])

  ; inst U2 : usb-src

  require ep1 : usb-superspeed() from asm2464pdx

  inst usb4_type_c : components/TE_2388749-1/component
  
  require ep2 : usb-superspeed() from usb4_type_c

  val ti-2 = usb-get-trace-impedance(USB4)
  val usb4-constraints = USB-Constraint(proto = USB4, route-struct = diff(ti-2))
  constrain-topology(ep1.data => ep2.data, usb4-constraints)

  val b-cap = ceramic-cap(100.0e-9)
  ;CapacitorQuery(rated-voltage = AtLeast(50.0)
  ;get-default-capacitor-query()

  val ti-3 = usb-get-trace-impedance(USB4)
  val usb3-constraints = USB-Constraint(proto = USB4, route-struct = diff(ti-3))
  val lane-constraint = LaneConstraint(usb4-constraints)
  ; ; Notice the `reverse-lane` usage here. I'm assuming that these are two
  ; ;   active components and hence we need to make `TX => RX` and `RX => TX`
  ; ;   The `reverse-lane` makes this flip happen.
  ; ; If we were connecting an active component (MCU) to a passive component (connector)
  ; ;   then we would not use the `reverse-lane`
  within [src, dst] = constrain-topology(ep1.lane[0] => ep2.lane[0], lane-constraint):
  ;   ; Here we construct the differential pair topology for the lane.
  ;   ; The Lane consists of two diff-pairs - TX and RX
    topo-net(src.RX => dst.RX)

  ;   ; The TX channel needs a blocking capacitor which we add with
  ;   ;  the help of the `topo-pair` utility. This is like `topo-net`
  ;   ;  but handles extracting the `dual-pair` require from the
  ;   ;  `tx-bcap` for us.
    inst tx-bcap : dp-coupler(b-cap)
    topo-pair(src.TX => tx-bcap => dst.TX)
  
  


  ; inst header : pin-header(2, 1)
  ; place(header) at loc(0.0, 0.0) on Top

  ; inst m2_connector : components/TE_1-2199230-6/component
  ; inst m2_connector : compoenents/T 

  ; Write the board version on silkscreen
  inst version-label  : ocdb/artwork/board-text/version-silkscreen("Version 0.0") 
  place(version-label) at loc(0.0, height(board-shape) / 2.0 - 1.0) on Bottom

; Set the design name     - a directory with this name will be generated under the "designs" directory
;     the board           - a Board object
;     [optional] rules    - the PCB design rules (if not givn default rules will be used)
;     [optional] vendors  - Strings or AuthorizedVendors (if not give default vendors will be used)
;     [optional] quantity - Minimum stock quantity the vendor should carry (if not give default quantity will be used)
setup-design(
  "jitx-design",
  ocdb/utils/defaults/default-board(ocdb/manufacturers/stackups/jlcpcb-jlc2313, board_shape)
)

; Set the schematic sheet size
set-paper(ISO-A4)

; Set the top level module (the module to be compile into a schematic and PCB)
set-main-module(my-design)

; Use any helper function from helpers.stanza here
; run-check-on-design(my-design)

; View the results
view-board()
view-schematic()
view-design-explorer()
;view-bom(BOM-STD)
